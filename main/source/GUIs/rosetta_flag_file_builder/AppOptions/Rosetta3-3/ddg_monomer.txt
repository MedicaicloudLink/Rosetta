-in:file:s==<pdbfile of the preminimized wildtype structure> # the PDB file of the structure on which point mutations should be made
-ddg::mut_file==the list of point mutations to consider in this run
-resfile==Resfile to be used instead of mutfile
-ddg:weight_file==soft_rep_design # Use soft-repulsive weights for the initial sidechain optimization stage
-ddg:minimization_scorefunction==optional -- the weights file to use, if not given, then "score12" will be used (score12 = standard.wts + score12.wts_patch)
-ddg::minimization_patch==optional -- the weight-patch file to apply to the weight file; does not have to be given
-fa_max_dis==9.0 # optional -- if not given, the default value of 9.0 Angstroms is used.
-ddg::iterations 50==50 # 50 is the recommended number of iterations
-ddg::dump_pdbs==true # write out PDB files for the structures, one for the wildtype and one for the pointmutant for each iteration
-ignore_unrecognized_res true==true # Recommended
-ddg::local_opt_only==true Low-Res, false High-Res : local optimization restricts the sidechain optimization to only the 8 A neighborhood of the mutation (equivalent to row 13)
-ddg::min_cst true==true # use distance restraints (aka constraints) during the backbone minimization phase
-constraints::cst_file==<cbeta-distance-constraint-file> # the set of constraints to use during minimization which should reflect distances in the original (non-pre-relaxed) structure
-ddg::suppress_checkpointing==true # dont checkpoint
-in::file::fullatom==read the input PDB file as a fullatom structure
-ddg::mean==true Low-Res, false High-Res # do not report the mean energy
-ddg::min==false Low-Res, true High-Res # report the minimum energy
-ddg::sc_min_only false==false # do not minimize only the backbone during the backbone minimization phase
-ddg::ramp_repulsive true==true # perform three rounds of minimization (and not just the default 1 round) where the weight on the repulsive term is increased from 10% to 33% to 100%
-mute==all # optional -- silence all of the log-file / stdout output generated by this protocol
-unmute==core.optimization.LineMinimizer # optional -- unsilence a particular tracer
-ddg::output_silent==true # write output to a silent file
